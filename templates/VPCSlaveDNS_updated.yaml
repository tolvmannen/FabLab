Description: Updated VPC for DNS Authoritative Slave with one public subnet and two securitygroups
Parameters:
  Ipv6Pool:
    Description: Amazon provided Ipv6 address pool (1) or bring your own Ipv6 address pool (2)
    Type: Number
    AllowedValues: [1, 2]
  Ipv6CidrBlock:
    Description: /56 cidr block of your own Ipv6 address pool, only fill this field if you chose to bring your own Ipv6 pool (2)
    Type: String
Conditions:
  Ipv6PoolIsAmazon: !Equals [ !Ref Ipv6Pool, 1]
  Ipv6PoolIsBYOIP: !Equals [ !Ref Ipv6Pool, 2]
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Role
          Value: VPCslave
  VPCCidrBlockIPv6:
    Type: AWS::EC2::VPCCidrBlock
    Condition: Ipv6PoolIsAmazon
    Properties:
      VpcId: !Ref VPC
      AmazonProvidedIpv6CidrBlock: true
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/16
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: VPC
      Ipv6CidrBlock:
        Fn::Sub:
          - "${VpcPart}${SubnetPart}"
          - SubnetPart: '33::/64'
            VpcPart: !If [Ipv6PoolIsBYOIP, !Select [ 0, !Split [ '00::/56', !Ref Ipv6CidrBlock ]], !Select [ 0, !Split [ '00::/56', !Select [ 0, !GetAtt VPC.Ipv6CidrBlocks ]]]]
      Tags:
        - Key: Role
          Value: PublicSubnetSlave
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Role
          Value: InternetGatewaySlave
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Role
          Value: PublicRouteTableSlave
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  PublicIpv6Route:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      DestinationIpv6CidrBlock: ::/0
      RouteTableId:
        Ref: PublicRouteTable
      GatewayId:
        Ref: InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet
      RouteTableId:
        Ref: PublicRouteTable
  VPCSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow inbound SSH and ICMP traffic. All outbound traffic allowed.
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIpv6: ::/0
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIpv6: ::/0
        - IpProtocol: icmpv6
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
        - IpProtocol: icmpv6
          FromPort: -1
          ToPort: -1
          CidrIpv6: ::/0
      Tags:
        - Key: Role
          Value: VPCSGslave
  DNSSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow inbound DNS traffic. All outbound traffic allowed.
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 53
          ToPort: 53
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 53
          ToPort: 53
          CidrIpv6: ::/0
        - IpProtocol: udp
          FromPort: 53
          ToPort: 53
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 53
          ToPort: 53
          CidrIpv6: ::/0
      Tags:
        - Key: Role
          Value: DNSSGslave
Outputs:
  StackVPC:
    Description: The ID of the VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VPCID"
  StackPublicSubnet:
    Description: The ID of the public subnet
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub "${AWS::StackName}-PuSID"
  StackVPCSG:
    Description: The ID of the VPCSG
    Value: !Ref VPCSG
    Export:
      Name: !Sub "${AWS::StackName}-VPCSGID"
  StackDNSSG:
    Description: The ID of the DNSSG
    Value: !Ref DNSSG
    Export:
      Name: !Sub "${AWS::StackName}-DNSSGID"
