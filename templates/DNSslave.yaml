Description: Authoritative slave DNS using BIND
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  StudentKey:
    Description: SSH key for student access
    Type: String
  HostName:
    Description: Hostname for the DNS slave
    Type: String
  VPCSlaveStackName:
    Description: Name of the VPC stack for the DNS slave
    Type: String
    ConstraintDescription: Must be a name of an existing stack
  Ipv4Pool:
    Description: Amazon provided Ipv4 address pool (1) or bring your own Ipv4 address pool (2)
    Type: Number
    AllowedValues: [1, 2]
  BYOIP:
    Description: Id of your own Ipv4 address pool, only fill this field if you chose to bring your own Ipv4 pool (2)
    Type: String
Conditions:
  Ipv4PoolIsBYOIP: !Equals [ !Ref Ipv4Pool, 2]
Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0dba2cb6798deb6d8
    us-west-1:
      AMI: ami-021809d9177640a20
    eu-west-1:
      AMI: ami-06fd8a495a537da8b
    eu-north-1:
      AMI: ami-008dea09a148cea39
    eu-central-1:
      AMI: ami-0c960b947cbb2dd16
    ap-southeast-1:
      AMI: ami-093da183b859d5a4b
    ap-northeast-1:
      AMI: ami-09b86f9709b3c33d4
Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      InstanceType: t3.micro
      SecurityGroupIds:
        - Fn::ImportValue:
            Fn::Sub: "${VPCSlaveStackName}-VPCSGID"
        - Fn::ImportValue:
            Fn::Sub: "${VPCSlaveStackName}-DNSSGID"
      KeyName: !Ref 'KeyName'
      SubnetId:
        Fn::ImportValue:
          Fn::Sub: "${VPCSlaveStackName}-PuSID"
      Ipv6AddressCount: 1
      Tags:
        - Key: Subnet
          Value: PublicSubnetSlave
        - Key: Role
          Value: DNSslave
      UserData: !Base64
        Fn::Sub: |
          #cloud-config
          package_update: true
          package_upgrade: true
          packages:
            - bind9
            - net-tools
            - bind9utils
          runcmd:
            - systemctl restart bind9
            - hostnamectl set-hostname ${HostName}
            - sed -i 's/preserve_hostname:\ false/preserve_hostname:\ true/' /etc/cloud/cloud.cfg
            - echo ${StudentKey} >> /home/ubuntu/.ssh/authorized_keys
  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      PublicIpv4Pool: !If [Ipv4PoolIsBYOIP, !Ref BYOIP, !Ref 'AWS::NoValue']
      Tags:
        - Key: Project
          Value: DNScourse
        - Key: Role
          Value: EIPslaveDNS
  MyEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt MyEIP.AllocationId
      InstanceId: !Ref MyEC2Instance
