Description: Resolver using BIND
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  StudentKey:
    Description: SSH key for student access
    Type: String
  HostName:
    Description: Hostname for the Resolver
    Type: String
  VPCStackName:
    Description: Name of the VPC stack
    Type: String
    ConstraintDescription: Must be a name of an existing stack
Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0dba2cb6798deb6d8
    us-west-1:
      AMI: ami-021809d9177640a20
    eu-west-1:
      AMI: ami-06fd8a495a537da8b
    eu-north-1:
      AMI: ami-008dea09a148cea39
    eu-central-1:
      AMI: ami-0c960b947cbb2dd16
    ap-southeast-1:
      AMI: ami-093da183b859d5a4b
    ap-northeast-1:
      AMI: ami-09b86f9709b3c33d4
Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      InstanceType: t3.micro
      SecurityGroupIds:
        - Fn::ImportValue:
            Fn::Sub: "${VPCStackName}-VPCSGID"
        - Fn::ImportValue:
            Fn::Sub: "${VPCStackName}-DNSSGID"
        - Fn::ImportValue:
            Fn::Sub: "${VPCStackName}-ResolverSGID"
      KeyName: !Ref 'KeyName'
      SubnetId:
        Fn::ImportValue:
          Fn::Sub: "${VPCStackName}-PrLANSID"
      PrivateIpAddress: 10.0.55.53
      Ipv6Addresses:
        - Ipv6Address:
            Fn::Sub:
              - "${SubnetPart}${InstancePart}"
              - SubnetPart: !Select [ 0, !Split [ "/", Fn::ImportValue: !Sub "${VPCStackName}-PrLANSIpv6"]]
                InstancePart: "53"
      Tags:
        - Key: Subnet
          Value: LAN
        - Key: Role
          Value: Resolver
      UserData: !Base64
        Fn::Sub: |
          #cloud-config
          package_update: true
          package_upgrade: true
          packages:
            - bind9
            - net-tools
          write_files:
            - path: /etc/bind/named.conf.options
              content: |
                options {
                        directory "/var/cache/bind";

                        dnssec-validation auto;

                        listen-on-v6 { any; };

                        version "not currently available";

                        recursion yes;

                        allow-recursion { 127.0.0.1; 10.0.55.0/24; 10.0.77.0/24; 10.0.99.0/24; ::1; };

                        querylog yes;
                };
          runcmd:
            - hostnamectl set-hostname ${HostName}
            - sed -i 's/preserve_hostname:\ false/preserve_hostname:\ true/' /etc/cloud/cloud.cfg
            - echo ${StudentKey} >> /home/ubuntu/.ssh/authorized_keys
            - echo "ecdsa-sha2-nistp521 AAAAE2VjZHNhLXNoYTItbmlzdHA1MjEAAAAIbmlzdHA1MjEAAACFBAEkt7zuR9W8YVz3U0jl4LdR5F2KPL2GrHA/VkT65MeZicHzUtNdafCEUivRjVYmut3zUU70oY9wy1AaKE0sqp9XWAEEpyNeohTl2VwicV1iacKBMge5G8lveQN4UMC9KC4OnGTtu+8cWJAGWnnP/gvWDZCVZLzj6viZf/JBG0dm91fmkA==" >> /home/ubuntu/.ssh/authorized_keys
            - sed -ie 's/^#DNSStubListener=yes/DNSStubListener=no/' /etc/systemd/resolved.conf
            - rm /etc/resolv.conf
            - echo 'nameserver 10.0.55.53' > /etc/resolv.conf
            - sed -ie '1s/^/10.0.55.53 ${HostName}\n/' /etc/hosts
            - systemctl disable systemd-resolved
            - systemctl stop systemd-resolved
            - reboot
